
trigger:
- master
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore NuGet Packages
    inputs:
      command: 'restore'
      projects: '$(solution)'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: Build Project
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: Publish Project
    inputs:
      command: 'publish'
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: True

  - task: DotNetCoreCLI@2
    displayName: Install Entity Framework Tools (optional)
    continueOnError: true
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install dotnet-ef --global'

  - task: DotNetCoreCLI@2
    displayName: Generate Migration Script
    inputs:
      command: 'custom'
      custom: 'ef'
      arguments: 'migrations script --project src/WePrint/WePrint.csproj --output $(Build.ArtifactStagingDirectory)\SQL\migration.sql --context WePrintContext --idempotent'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      workingDirectory: '$(Build.ArtifactStagingDirectory)\SQL\'
      script: |
        <#
        
        Replace all 
        CREATE UNIQUE INDEX [...]
        with 
        EXEC('CREATE UNIQUE INDEX [...]')
        in migration.sql
        
        #>
        $regexA = '\s*(CREATE UNIQUE INDEX.+)'
        $encoding = New-Object System.Text.UTF8Encoding
        $invocation = (Get-Variable MyInvocation).Value
        Get-ChildItem  "migration.sql" | % {
          $c = (Get-Content $_.FullName) -replace $regexA,'EXEC(''$0'')' -join "`r`n"
          [IO.File]::WriteAllText("$((Get-Item -Path ".\").FullName)\\migration.sql", $c, $encoding)
        }
        Write-Host ("migration.sql has been fixed")

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifacts"
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'WePrint'